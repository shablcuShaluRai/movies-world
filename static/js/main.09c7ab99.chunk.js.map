{"version":3,"sources":["images/image1.jpg","container/reducer/index.js","container/action/index.js","container/index.js","Components/Card/index.js","Components/CardList/index.js","Components/DropDown/index.js","Components/Search/index.js","Components/HomePage/index.js","Components/ViewCard/index.js","App.js","index.js"],"names":["module","exports","intialState","moviesResult","moviesList","response","error","search","rootReducer","state","action","type","Search","Response","Error","movies","i","length","fav","JSON","parse","toLowerCase","movie","id","forEach","index","imdbID","setMoviesList","setSearch","setFavourite","Container","connect","dispatch","bindActionCreators","Card","key","history","className","onClick","push","alt","src","Poster","logo","Title","Year","Type","CardList","props","map","setFav","DropDown","dropdownList","handleState","onChange","e","target","value","dropDown","label","SearchForm","getMovieData","placeholder","showFav","setState","a","fetch","json","result","favouriteMovie","this","console","log","filter","Component","labelValue","ViewCard","location","pathname","split","useState","movieData","setMoviesData","useEffect","Writer","Released","Actors","Plot","Language","Awards","imdbRating","Director","Genre","App","exact","path","component","Homepage","store","createStore","reducers","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.09c7ab99.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/image1.a3be25fa.jpg\";","const intialState = {\n  moviesResult: {\n    moviesList: [],\n    response: false,\n    error: \"\",\n  },\n  search: \"\",\n};\n\nfunction rootReducer(state = intialState, action) {\n  switch (action.type) {\n    case \"SAVE_MOVIES\": {\n      const { Search, Response, Error } = action.moviesList;\n      const movies = Search || [];\n      for (let i = 0; i < movies.length; i++) {\n        movies[i].fav = false;\n      }\n      return {\n        ...state,\n        moviesResult: {\n          moviesList: movies,\n          response: JSON.parse(Response.toLowerCase()),\n          error: Error,\n        },\n      };\n    }\n\n    case \"SEARCH\":\n      return {\n        ...state,\n        search: action.search,\n      };\n\n    case \"TOGGLE_FAVOURITE\": {\n      const { moviesList, response, error } = state.moviesResult;\n      const { id, fav } = action.movie;\n      moviesList.forEach((movies, index) => {\n        if (movies.imdbID === id) {\n          moviesList[index].fav = fav;\n        }\n      });\n\n      return {\n        ...state,\n        moviesResult: {\n          moviesList: [...moviesList],\n          response,\n          error,\n        },\n      };\n    }\n    default:\n      return state;\n  }\n}\n\nexport default rootReducer;\n","export const SAVE_MOVIES = \"SAVE_MOVIES\"\nexport const SEARCH = \"SEARCH\"\nexport const TOGGLE_FAVOURITE = \"TOGGLE_FAVOURITE\"\n\n\nexport const setMoviesList = (moviesList) => ({\n  type: SAVE_MOVIES,\n  moviesList\n})\n\nexport const setSearch = (search) => ({\n  type: SEARCH,\n  search\n})\n\n\nexport const setFavourite = movie => ({\n  type: TOGGLE_FAVOURITE,\n  movie\n})","import { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { setSearch, setMoviesList, setFavourite } from \"./action\";\n\nfunction mapStateToProps(state) {\n  const { search, moviesResult } = state;\n  const { moviesList, response, error } = moviesResult;\n  return {\n    search,\n    moviesList,\n    response,\n    error,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators(\n    {\n      setMoviesList,\n      setSearch,\n      setFavourite,\n    },\n    dispatch\n  );\n}\n\nconst Container = connect(mapStateToProps, mapDispatchToProps);\n\nexport default Container;\n","import React from \"react\";\nimport logo from \"../../images/image1.jpg\";\nimport \"./styles.css\";\n\nconst Card = ({ movies, key, history, setFavourite }) => (\n  <div key={key} className=\"card-container\">\n    <div onClick={() => history.push(movies.imdbID)}>\n      <img\n        alt={`alt ${key}`}\n        src={movies.Poster === \"N/A\" ? logo : movies.Poster}\n      />\n      <h4>{`${movies.Title} - ${movies.Year}`}</h4>\n    </div>\n    <div className=\"type-fav-wrap\">\n      <p>Type: {movies.Type}</p>\n      <div\n        onClick={() => setFavourite({ id: movies.imdbID, fav: !movies.fav })}\n      >\n        <i\n          className={movies.fav ? \"\tfa fa-heart favourite\" : \"\tfa fa-heart-o heart\"}\n        />\n      </div>\n    </div>\n  </div>\n);\n\nexport default Card;\n","import React from \"react\";\nimport Card from \"../Card\";\nimport \"./styles.css\";\n\nconst CardList = props => (\n  <div className=\"card-list-container\">\n    {props.moviesList && props.moviesList.map(movies => (\n      <Card\n        key={movies.imdbID}\n        movies={movies}\n        history={props.history}\n        fav={props.fav}\n        setFav={props.setFav}\n        setFavourite={props.setFavourite}\n      />\n    ))}\n  </div>\n);\n\nexport default CardList;\n","import React from \"react\";\n\nconst DropDown = ({ dropdownList, handleState }) => (\n  <select\n    onChange={e => {\n      handleState(\"type\", e.target.value);\n    }}\n  >\n    {dropdownList.map(dropDown => (\n      <option key={dropDown.label} value={dropDown.value}>\n        {dropDown.label}\n      </option>\n    ))}\n  </select>\n);\n\nexport default DropDown;\n","import React from \"react\"\nimport DropDown from \"../DropDown\"\nimport \"./styles.css\"\n\nconst dropdownList = [\n  {\n    label: \"All\",\n    value: \"\",\n  },\n  {\n    label: \"Movies\",\n    value: \"movie\",\n  },\n  {\n    label: \"Series\",\n    value: \"series\",\n  },\n  {\n    label: \"Episodes\",\n    value: \"episode\",\n  },\n]\nfunction SearchForm({ search, setSearch, getMovieData, handleState }) {\n  return (\n    <div>\n      <input\n        className=\"search\"\n        type=\"search\"\n        value={search}\n        onChange={e => setSearch(e.target.value)}\n        placeholder=\"search Movies/Series/Episodes\"\n      />\n      <DropDown dropdownList={dropdownList} handleState={handleState} />\n\n      <button\n        onClick={() => {\n          getMovieData(search)\n          handleState(\"showFav\", false)\n        }}\n      >\n        Search\n      </button>\n\n      <button\n        onClick={() => {\n          handleState(\"showFav\", true)\n          setSearch(\"\")\n        }}\n        className=\"fav-btn\"\n      >\n        <span>\n          Favourite Movies <i className=\"fa fa-heart\" />\n        </span>\n      </button>\n    </div>\n  )\n}\n\nexport default SearchForm\n","import React, { Component } from \"react\";\nimport Container from \"../../container\";\nimport CardList from \"../CardList\";\nimport SearchForm from \"../Search\";\nimport \"./homepage.css\";\n\nexport const API_KEY = \"5e08209d\";\n\nclass Homepage extends Component {\n  state = {\n    showFav: false,\n    type: \"\",\n  };\n\n  handleState = (label, value) => this.setState({ [label]: value });\n\n  getMovieData = async () => {\n    const { search, setMoviesList } = this.props;\n    const { type } = this.state;\n    const response = await fetch(\n      `http://www.omdbapi.com/?s=${search}&apikey=${API_KEY}&type=${type}`\n    );\n    const result = await response.json();\n    setMoviesList(result);\n  };\n\n  render() {\n    const {\n      search,\n      moviesList,\n      setSearch,\n      setFavourite,\n      history,\n      response,\n      error,\n    } = this.props;\n    const { showFav } = this.state;\n    console.log(\">>>>>>>>>>>>>>moviesList>>>>>>>>>\", moviesList);\n    let favouriteMovie;\n    if (showFav) {\n      favouriteMovie = moviesList.filter(movie => movie.fav === true);\n    } else {\n      favouriteMovie = moviesList;\n    }\n    console.log(\">>>>>>favouriteMovie>>>>>>\", favouriteMovie);\n    return (\n      <div className=\"homepage-wrap\">\n        <h1>Movies World</h1>\n        <SearchForm\n          setSearch={setSearch}\n          search={search}\n          getMovieData={this.getMovieData}\n          handleState={this.handleState}\n        />\n        {favouriteMovie.length === 0 && <h1 className=\"text\">You don't have any movie</h1>}\n        {response ? (\n            <CardList\n              moviesList={favouriteMovie}\n              history={history}\n              setFavourite={setFavourite}\n            />\n        ) : (\n          <h1 className=\"text\">{error}</h1>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Container(Homepage);\n","import React, { useState, useEffect } from \"react\";\nimport \"./viewCard.css\";\n\nexport const API_KEY = \"5e08209d\";\n\nconst labelValue = (label, value) => (\n  <div className=\"label-value-wrapper\">\n    <span className=\"label\">{label}:</span>\n    <span className=\"value\">{value}</span>\n  </div>\n);\n\nfunction ViewCard({ history }) {\n  const path = history && history.location.pathname;\n  const id = path.split(\"/\")[1];\n  const [movieData, setMoviesData] = useState({});\n\n  const getMovieData = async () => {\n    const response = await fetch(\n      `http://www.omdbapi.com/?i=${id}&apikey=${API_KEY}`\n    );\n    const result = await response.json();\n    setMoviesData(result);\n  };\n\n  useEffect(() => {getMovieData()}, [id]);\n  const {\n    Title,\n    Writer,\n    Poster,\n    Released,\n    Actors,\n    Plot,\n    Language,\n    Awards,\n    imdbRating,\n    Director,\n    Genre,\n  } = movieData;\n  return (\n    <div className=\"view-card-wrap\">\n      <div>\n        <img alt={Title} src={Poster} />\n      </div>\n      <div className=\"movie-details\">\n        {labelValue(\"Title\", Title)}\n        {labelValue(\"Plot\", Plot)}\n        {labelValue(\"Language\", Language)}\n        {labelValue(\"Genre\", Genre)}\n        {labelValue(\"Actors\", Actors)}\n        {labelValue(\"Released\", Released)}\n        {labelValue(\"imdbRating\", imdbRating)}\n        {labelValue(\"Awards\", Awards)}\n        {labelValue(\"Writer\", Writer)}\n        {labelValue(\"Director\", Director)}\n      </div>\n    </div>\n  );\n}\n\nexport default ViewCard;\n","\nimport React from 'react'\nimport { Switch, Route } from \"react-router-dom\"\nimport Homepage from \"./Components/HomePage\"\nimport ViewCard from \"./Components/ViewCard\"\nimport './App.css'\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Switch>\n        <Route exact path=\"/\" component={Homepage} />\n        <Route exact path=\"/:id\" component={ViewCard} />\n      </Switch>      \n    </div>\n  )\n}\n\nexport default App","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\nimport reducers from \"./container/reducer\";\nimport App from \"./App.js\";\nimport \"./index.css\";\n\nconst store = createStore(reducers);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}